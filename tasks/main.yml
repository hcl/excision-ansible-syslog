---
- name: ensure parent directories exist for service logs
  file:
    path: "{{ item.file | dirname }}"
    state: directory
    owner: "{{ item.user | default('root') }}"
    group: "{{ item.group | default('wheel') }}"
    mode: "{{ item.dirmode | default('0755') }}"
  with_items: "{{ syslog_logfiles_service }}"

- name: check if service log files exist
  stat:
    path: "{{ item.file }}"
  register: log_stat
  with_items: "{{ syslog_logfiles_service }}"

- name: create service log files if they don't exist
  file:
    path: "{{ item.item.file }}"
    state: touch
    owner: "{{ item.item.user | default('root') }}"
    group: "{{ item.item.group | default('wheel') }}"
    mode: "{{ item.item.mode | default('0640') }}"
    modification_time: preserve
    access_time: preserve
  when: not item.stat.exists
  with_items: "{{ log_stat.results }}"

- name: make sure log files exist
  file:
    path: "{{ item.file }}"
    state: touch
    owner: "{{ item.user | default('root') }}"
    group: "{{ item.group | default('wheel') }}"
    mode: "{{ item.mode | default('0640') }}"
    modification_time: preserve
    access_time: preserve
  with_items: "{{ syslog_logfiles }}"

- name: generate syslog conf
  template:
    src: syslog.conf.j2
    dest: /etc/syslog.conf
    force: true
    owner: root
    group: wheel
    mode: '0644'
  notify: restart syslog

- name: generate newsyslog conf
  template:
    src: newsyslog.conf.j2
    dest: /etc/newsyslog.conf
    force: true
    owner: root
    group: wheel
    mode: '0644'

- name: flush_handlers
  meta: flush_handlers
